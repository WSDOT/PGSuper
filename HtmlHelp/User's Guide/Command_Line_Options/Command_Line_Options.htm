<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>TxDOT Data Export Options</title>

<!--(Meta)==========================================================-->

<meta name="template" content="PageTemplate.htt">
<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1369>
<meta name=layout-width content=1222>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="..\..\default.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1>TxDOT Data Export Options</h1>

<p class=Tip>Note: You must select the TxDOT components at installation 
 time in order to use this feature.</p>

<p>When the TxDOT data export options are given on the command line, PGSuper 
 will create an output file that contains the TxDOT CAD data. The output 
 generated when using the &quot;Tx&quot; options is very similar to that 
 which is generated by PSTRS14. This feature can be used for batch processing.</p>

<h2>Command Line Options (“Tx” Options)</h2>

<p>To run PGSuper with the Tx options, use a command with the following 
 format:</p>

<p class=Listing
	style="font-weight: bold;">\path\PGSuper.exe /Option <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->input_file.pgs 
 Output_file <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->&lt;span&gt; 
 &lt;girder&gt;</p>

<p style="font-weight: bold;">Where:</p>

<p><span style="font-weight: bold;">Option</span> (case in-sensitive) can 
 be:</p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxA</span> – 
 Run analysis of current data – standard CAD format</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxAx</span> – 
 Run analysis of current data – extended testing format</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxD</span> – 
 Run flexure design – standard CAD format</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxDx</span> – 
 Run flexure design – extended testing format</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxDS</span> – 
 Run flexure and shear design – extended testing format</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxAo</span> – 
 Same as TxA but will overwrite output file instead of appending</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxAxo</span> 
 – Same as TxAx but will overwrite output file instead of appending</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxDo</span> – 
 Same as TxD but will overwrite output file instead of appending</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">TxDxo</span> 
 – Same as TxDx but will overwrite output file instead of appending</p></li>
</ul>

<p><span style="font-weight: bold;">\path\</span> is the path where pgsuper.exe 
 is installed.</p>

<p><span style="font-weight: bold;">Input_file.pgs</span> is the input 
 file to be processed</p>

<p><span style="font-weight: bold;">Output_file</span> is the name of the 
 output file. Existing files will be overwritten.</p>

<p><span style="font-weight: bold;">&lt;span&gt;</span> is a single integer 
 (e.g., 1, 2,…) defining the span where the girder is, or “All” to run 
 all spans. </p>

<p><span style="font-weight: bold;">&lt;girder&gt;</span> is a single character 
 (e.g., a, B, f,…) defining the girder number, or “All” to run all girders 
 in a span (or all girders in all spans if span option is also “All”).</p>

<h3>Notes</h3>

<p>If an error occurs while running PGSuper, a .err file (e.g., “Route66.err”) 
 attempting to explain the problem will be created. Partial data will likely 
 be in the output file.</p>

<p>Library Entry conflicts will cause processing to cease. You need to 
 make sure that there are no library conflicts in the input file before 
 running them from the command line.</p>

<p class=Tip>Note that the file format for this command has been defined 
 by TxDOT and can be changed by them without notice.</p>

<h3>Examples</h3>

<p>An example of a command line to run a design for span 1, girder C using 
 input file “Route66.pgs” and creating an extended output file “Route66.txt” 
 is as follows:</p>

<p style="margin-left: 40px; font-weight: bold;">\path\PGSuper.exe /TxDx 
 Route66.pgs Route66.txt 1 C</p>

<p style="margin-left: 0px;">Here is another example to run an analysis 
 using standard output format for all beams in Span 2:</p>

<p style="margin-left: 40px; font-weight: bold;"><span style="font-weight: bold;">\path\PGSuper.exe 
 /TxA Route66.pgs Route66.txt 2 ALL</span></p>

<h3>Output File Format</h3>

<p style="font-weight: normal;">Output files are generated in &quot;standard&quot; 
 or &quot;enhanced&quot; format. These are space-delimited text files (fields 
 are separated by a single blank space). The data formats for draped and 
 debonded strand layouts are different by nature. Refer to the TxDOT IGND 
 and UBND girder design standard plan sheets for more information about 
 data and formatting.</p>

<p class=Tip>Tip: The extended version of the file contains extra data 
 and a table header that describes the content.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>
